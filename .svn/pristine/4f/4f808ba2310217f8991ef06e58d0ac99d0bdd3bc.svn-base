<%@ page language="java" contentType="text/html; charset=utf-8"
    pageEncoding="utf-8"%>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html> 
<head> 
<title>圆形进度条</title> 
<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/> 
<script src="js/jquery.js"></script> 
<script src="js/raphael-source.js"></script> 
<style> 
#txt{ 
    width:74px; 
    height:74px; 
    line-height:74px; 
    position:absolute; 
    margin-top:-74px; 
    text-align:center; 
    color:#9e9fa3; 
    font-size:18px; 
    font-family:Arial; 
} 

#txt1{ 
    width:74px; 
    height:74px; 
    line-height:74px; 
    position:absolute; 
    margin-top:-74px; 
    text-align:center; 
    color:#9e9fa3; 
    font-size:18px; 
    font-family:Arial; 
} 
#txt2{ 
    width:74px; 
    height:74px; 
    line-height:74px; 
    position:absolute; 
    margin-top:-74px; 
    text-align:center; 
    color:#9e9fa3; 
    font-size:18px; 
    font-family:Arial; 
} 
#txt3{ 
    width:74px; 
    height:74px; 
    line-height:74px; 
    position:absolute; 
    margin-top:-74px; 
    text-align:center; 
    color:#9e9fa3; 
    font-size:18px; 
    font-family:Arial; 
} 
#txt4{ 
    width:74px; 
    height:74px; 
    line-height:74px; 
    position:absolute; 
    margin-top:-74px; 
    text-align:center; 
    color:#9e9fa3; 
    font-size:18px; 
    font-family:Arial; 
} 

#circleBox div{
 margin-top:100px;
 margin-left:100px; 
 float: left;
}
</style> 
<script> 
//paperId=画布ID,textId=数字的ID,strokecolor=填充颜色,渐变颜色1=sidecolor,渐变颜色2=innercolor,totol=总共的量,textNum=圆圈中显示的量
 function draw(paperId,textId,strokecolor,sidecolor,innercolor,totol,textNum){
	 //初始化Raphael画布 
     this.paper = Raphael(paperId, 74, 74); 
     //把底图先画上去 
     this.paper.image("images/circle_bg.png", 0, 0, 74, 74); 
     //进度比例，0到1，在本例中我们画65% 
     //需要注意，下面的算法不支持画100%，要按99.99%来画 
     var percent = textNum/100, 
         drawPercent = percent >= 1 ? 0.9999 : percent; 
     //开始计算各点的位置，见后图 
     //r1是内圆半径，r2是外圆半径 
     var r1 = 26, r2 = 31, PI = Math.PI, 
         p1 = { 
             x:37,  
             y:69 
         }, 
         p4 = { 
             x:p1.x, 
             y:p1.y - r2 + r1 
         }, 
         p2 = {  
             x:p1.x + r2 * Math.sin(2 * PI * (1 - drawPercent)), 
             y:p1.y - r2 + r2 * Math.cos(2 * PI * (1 - drawPercent)) 
         }, 
         p3 = { 
             x:p4.x + r1 * Math.sin(2 * PI * (1 - drawPercent)), 
             y:p4.y - r1 + r1 * Math.cos(2 * PI * (1 - drawPercent)) 
         }, 
         path = [ 
             'M', p1.x, ' ', p1.y, 
             'A', r2, ' ', r2, ' 0 ', percent > 0.5 ? 1 : 0, ' 1 ', p2.x, ' ', p2.y, 
             'L', p3.x, ' ', p3.y, 
             'A', r1, ' ', r1, ' 0 ', percent > 0.5 ? 1 : 0, ' 0 ', p4.x, ' ', p4.y, 
             'Z' 
         ].join(''); 
     //用path方法画图形，由两段圆弧和两条直线组成，画弧线的算法
     this.paper.path(path) 
         //填充渐变色
         .attr({"stroke-width":0.5, "stroke":strokecolor, "fill":"90-"+sidecolor+"-"+innercolor}); 

     //显示进度文字 
     $("#"+textId).text(Math.round(percent * totol) ); 
 } 
 
 
$(function(){
	//paperId,strokecolor,textId,sidecolor,innercolor,totol,textNum
	draw("bg","txt","#0099ff","#0066ff","#00ccff",100,65);
	draw("bg1","txt1","#ff3300","#000000","#000000",100,65);
	draw("bg2","txt2","#ffff00","#cc0000","#cc0000",100,65);
	draw("bg3","txt3","#009900","#ffffff","#ffffff",100,65);
	draw("bg4","txt4","#cccccc","#cccccc","#ffffff",100,65);
});
</script> 
</head> 
<body> 
 <div id="circleBox">
 <div id="div">
 <div id="bg"></div> 
<div id="txt"></div> 
 </div>

 <div id="div1">
 <div id="bg1"></div> 
<div id="txt1"></div> 
 </div>
  <div id="div2">
 <div id="bg2"></div> 
<div id="txt2"></div> 
 </div>
  <div id="div3">
 <div id="bg3"></div> 
<div id="txt3"></div> 
 </div>
  <div id="div4">
 <div id="bg4"></div> 
<div id="txt4"></div> 
 </div>

</div>
 
</body> 
</html> 

